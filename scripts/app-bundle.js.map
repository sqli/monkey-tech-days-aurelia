{"version":3,"sources":["app.ts","environment.ts","service/quizz.ts","login.ts","main.ts","quizz.ts","result.ts","resources/index.ts","C:/Users/rcomadelperier/Documents/04-Workspaces/monkey-tech-days-aurelia/monkey-tech-days-aurelia/src/app.html","C:/Users/rcomadelperier/Documents/04-Workspaces/monkey-tech-days-aurelia/monkey-tech-days-aurelia/src/login.html","C:/Users/rcomadelperier/Documents/04-Workspaces/monkey-tech-days-aurelia/monkey-tech-days-aurelia/src/quizz.html","C:/Users/rcomadelperier/Documents/04-Workspaces/monkey-tech-days-aurelia/monkey-tech-days-aurelia/src/result.html"],"names":[],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {Redirect, NavigationInstruction, RouterConfiguration} from 'aurelia-router';\n\nexport class App {\n  configureRouter(config: RouterConfiguration): void {\n    config.title = 'Monkey Tech Days Aurelia';\n    config.options.pushState = true;\n    config.options.root = '/';\n    config.map([\n      { route: 'login',   name: 'login',    moduleId: './login',    title: 'Login' },\n      { route: 'quizz',   name: 'quizz',    moduleId: './quizz',    title: 'Quizz' },\n      { route: 'result',  name: 'result',   moduleId: './result',   title: 'Result' },\n      { route: '',      redirect: 'login' }\n    ]);\n  }\n}\n","export default {\n  debug: true,\n  testing: true\n};\n","import {inject} from 'aurelia-framework';\nimport {HttpClient} from 'aurelia-fetch-client';\n\nconst endpoint = 'http://ilaborie.org:9010/api/';\n\n@inject(HttpClient)\nexport class QuizzService {\n\n  quizz:any;\n\n  constructor(public httpClient:HttpClient) {\n    this.login = window.sessionStorage.getItem('login');\n  }\n\n  getQuizz(){\n    if(window.sessionStorage.getItem('quizz')){\n      return JSON.parse(window.sessionStorage.getItem('quizz'));\n    }\n  }\n\n  setQuizz(quizz:any){\n    window.sessionStorage.setItem('quizz', JSON.stringify(quizz));\n  }\n\n  initQuizz(login:string){\n    return this.httpClient.fetch(endpoint + 'quizz?userName=' + login)\n      .then(response => response.json());\n  }\n\n  getNextQuestion(){\n    let index = this.getIndexOfNextQuestion();\n    return this.httpClient.fetch(endpoint + 'quizz/' + this.getQuizz().id + '/' + index)\n      .then(response => response.json()).then(response => {\n        return {\n          image: {\n            url: response.url,\n            copyright: response.attribution\n          },\n          responses: this.getQuizz().questions[index].responses\n        }\n      });\n  }\n\n  getResponse(){\n    var response = [];\n    if(window.sessionStorage.getItem('responses')){\n      response = JSON.parse(window.sessionStorage.getItem('responses'));\n    }\n    return response;\n  }\n\n  clear(){\n    window.sessionStorage.clear();\n  }\n\n  hasNextQuestion(){\n    return this.getIndexOfNextQuestion() < this.getQuizz().questions.length;\n  }\n\n  getIndexOfNextQuestion(){\n    return this.getResponse().length;\n  }\n\n  pushResponse(response:string){\n    var responses = this.getResponse();\n    responses.push(response);\n    window.sessionStorage.setItem('responses', JSON.stringify(responses));\n  }\n\n  getResult(){\n\n    return new Promise((resolve, reject) => {\n      if(!this.getQuizz()){\n        reject(new Error('Car!'));\n        return;\n      }\n      this.httpClient.fetch(endpoint + 'quizz/' + this.getQuizz().id + '/', {\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        method: 'POST',\n        body: JSON.stringify({responses : this.getResponse()})\n      }).then(response => {\n        if(response.status < 200 || response.status >= 400){\n          reject(new Error('Car!'));\n        }else{\n          resolve(response.json());\n        }\n      })\n    });\n  }\n\n  getLeaderboard(){\n    return this.httpClient.fetch(endpoint + 'leaderboard', {\n    }).then(response => response.json());\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {QuizzService} from './service/quizz';\nimport {Router} from 'aurelia-router';\n\n@inject(QuizzService, Router)\nexport class Login {\n\n  login:string = '';\n\n  constructor(public quizzService:QuizzService, public router:Router){\n\n  }\n\n  signup():void {\n    this.quizzService.initQuizz(this.login).then(quizz => {\n      this.quizzService.setQuizz(quizz);\n      this.router.navigate('quizz');\n    });\n  }\n\n}\n","import {Aurelia} from 'aurelia-framework'\nimport environment from './environment';\n\n//Configure Bluebird Promises.\n//Note: You may want to use environment-specific configuration.\n(<any>Promise).config({\n  warnings: {\n    wForgottenReturn: false\n  }\n});\n\nexport function configure(aurelia: Aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","import {inject} from 'aurelia-framework';\nimport {QuizzService} from './service/quizz';\nimport {Router} from 'aurelia-router';\n\n@inject(QuizzService, Router)\nexport class Quizz {\n\n  quizz:any = quizzService.getQuizz();\n\n  constructor(public quizzService:QuizzService, public router:Router){\n\n    if(!this.quizz){\n      this.router.navigate('login');\n    }else{\n      this.diplayQuestion();\n    }\n\n  }\n\n  diplayQuestion(){\n    if(this.quizzService.hasNextQuestion()){\n      this.quizzService.getNextQuestion().then(question => {\n        this.question = question;\n      });\n    }else{\n      this.router.navigate('result');\n    }\n\n  }\n\n  next(response){\n    this.quizzService.pushResponse(response);\n    this.diplayQuestion();\n  }\n\n}\n","import {inject} from 'aurelia-framework';\nimport {QuizzService} from './service/quizz';\nimport {Router} from 'aurelia-router';\n\n@inject(QuizzService, Router)\nexport class Result {\n\n\n  constructor(public quizzService:QuizzService, public router:Router){\n\n    quizzService.getResult().then(result => {\n      quizzService.clear();\n      this.result = result;\n    }).catch(error => {\n      quizzService.clear();\n      this.router.navigate('login');\n    });\n\n    quizzService.getLeaderboard().then(leaderboard => {\n      this.leaderboard = leaderboard;\n    });\n\n  }\n\n}\n","import {FrameworkConfiguration} from 'aurelia-framework';\n\nexport function configure(config: FrameworkConfiguration) {\n  //config.globalResources([]);\n}\n",null,null,null,null],"sourceRoot":"..\\src"}